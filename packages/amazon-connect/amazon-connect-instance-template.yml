AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >-
  Template to create/update an Amazon Connect instance.

Parameters:
  ##########################
  # Instance Configuration #
  ##########################
  IdentityManagementType:
    Type: String
    Default: CONNECT_MANAGED
    AllowedValues:
      - CONNECT_MANAGED
      - SAML

  InstanceAliasName:
    Type: String
    MinLength: 1
    AllowedPattern: ^(?!d-)([\da-zA-Z]+)([-]*[\da-zA-Z])*$

  IsAutoResolveBestVoicesEnabled:
    Type: String
    Default: true
    AllowedValues:
      - true
      - false

  IsContactflowLogsEnabled:
    Type: String
    Default: true
    AllowedValues:
      - true
      - false

  IsContactLensEnabled:
    Type: String
    Default: true
    AllowedValues:
      - true
      - false

  IsEarlyMediaEnabled:
    Type: String
    Default: true
    AllowedValues:
      - true
      - false

  IsInboundCallsEnabled:
    Type: String
    Default: true
    AllowedValues:
      - true
      - false

  IsOutboundCallsEnabled:
    Type: String
    Default: true
    AllowedValues:
      - true
      - false

  IsUseCustomTTSVoicesEnabled:
    Type: String
    Default: true
    AllowedValues:
      - true
      - false

  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
      - local

  ##########################
  # Storage Configuration #
  ##########################
  ConnectCallRecordingsS3Prefix:
    Type: String
    Default: CallRecordings

  ConnectChatTranscriptsS3Prefix:
    Type: String
    Default: ChatTranscripts

  ConnectScheduledReportsS3Prefix:
    Type: String
    Default: Reports

  #########################
  # Kinesis Configuration #
  #########################
  CRStreamRetentionPeriod:
    Type: Number
    Description: The number of hours for the data records to be available in the CR stream.
    Default: 24
    MinValue: 24
    MaxValue: 8760 # 365 days

  IsCRStreamServerSideEncryptionEnabled:
    Type: String
    Default: true
    AllowedValues:
      - true
      - false

  AgentEventStreamRetentionPeriod:
    Type: Number
    Description: The number of hours for the data records to be available in the Agent Event stream.
    Default: 24
    MinValue: 24
    MaxValue: 8760 # 365 days

  IsAgentEventStreamServerSideEncryptionEnabled:
    Type: String
    Default: true
    AllowedValues:
      - true
      - false

  #########################
  # Kinesis Video Streams #
  #########################
  KinesisVideoStreamRetentionPeriod:
    Type: Number
    Description: The number of hours for the data records to be available in the Kinesis Video Stream.
    Default: 4
    MinValue: 0
    MaxValue: 87600 # 10 years

  KinesisVideoStreamPrefix:
    Type: String
    Description: The prefix for the Kinesis Video Stream. Example <prefix>-connect-<instance alias name>-connect-[KVS creates the rest]
    MinLength: 1
    MaxLength: 128

  ##########################
  # Voice ID Configuration #
  ##########################
  ConnectVoiceIDDomainName:
    Type: String
    Description: The name for the Voice ID Domain.
    MinLength: 1
    MaxLength: 256
    AllowedPattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]*$

  ###########################
  # Customer Profile Config #
  ###########################
  UseDeadLetterQueueForCustomerProfile:
    Type: String
    Default: true
    AllowedValues:
      - true
      - false

  ConnectCustomerProfileDeadLetterQueueMessageRetentionPeriodInSeconds:
    Type: Number
    Default: 345600 # 4 days
    MinValue: 60 # 1 minute
    MaxValue: 1209600 # 14 days
    Description: The number of seconds that Amazon SQS retains a message.

  ConnectCustomerProfileDomainName:
    Type: String
    Description: The name for the Customer Profile Domain.
    MinLength: 1
    MaxLength: 256
    AllowedPattern: ^[a-zA-Z0-9][a-zA-Z0-9_-]*$

  ConnectCustomerProfileDataExpirationPeriodInDays:
    Type: Number
    MinValue: 1
    MaxValue: 1098
    Description: The default number of days until the data within the domain expires.

  ###########################
  # Amazon Connect Q Config #
  ###########################
  ConnectQAssistantName:
    Type: String
    Description: The name for the Amazon Connect Q Assistant.
    MinLength: 1
    MaxLength: 255

Mappings:
  ############################
  # Available Regions for AC #
  ############################
  AmazonConnectRegions:
    us-east-1:
      isAvailable: true
    us-west-2:
      isAvailable: true
    af-south-1:
      isAvailable: true
    ap-northeast-2:
      isAvailable: true
    ap-southeast-1:
      isAvailable: true
    ap-southeast-2:
      isAvailable: true
    ap-northeast-1:
      isAvailable: true
    ca-central-1:
      isAvailable: true
    eu-central-1:
      isAvailable: true
    eu-west-2:
      isAvailable: true
    us-gov-west-1:
      isAvailable: true

  ##############################################
  # Available Regions for Kinesis Video Stream #
  ##############################################
  KinesisVideoStreamRegions:
    us-east-2:
      isAvailable: true
    us-east-1:
      isAvailable: true
    us-west-2:
      isAvailable: true
    us-gov-east-1:
      isAvailable: true
    us-gov-west-1:
      isAvailable: true
    af-south-1:
      isAvailable: true
    ap-east-1:
      isAvailable: true
    ap-northeast-2:
      isAvailable: true
    ap-southeast-1:
      isAvailable: true
    ap-southeast-2:
      isAvailable: true
    ap-northeast-1:
      isAvailable: true
    ca-central-1:
      isAvailable: true
    cn-north-1:
      isAvailable: true
    eu-central-1:
      isAvailable: true
    eu-west-1:
      isAvailable: true
    eu-west-2:
      isAvailable: true
    eu-west-3:
      isAvailable: true
    sa-east-1:
      isAvailable: true

  ##########################################
  # Available Regions for Customer Profile #
  ##########################################
  CustomerProfileRegions:
    us-east-1:
      isAvailable: true
    us-west-2:
      isAvailable: true
    af-south-1:
      isAvailable: true
    ap-northeast-2:
      isAvailable: true
    ap-southeast-1:
      isAvailable: true
    ap-southeast-2:
      isAvailable: true
    ap-northeast-1:
      isAvailable: true
    ca-central-1:
      isAvailable: true
    eu-central-1:
      isAvailable: true
    eu-west-2:
      isAvailable: true

Conditions:
  ##########################################
  # Connect Instance Availabilty Condition #
  ##########################################
  IsConnectAvailableInRegion:
    !Equals [
      !FindInMap [AmazonConnectRegions, !Ref "AWS::Region", isAvailable],
      true,
    ]

  #####################################
  # Connect Kinesis Stream Conditions #
  #####################################
  EnableCRStreamServerSideEncryption:
    !Equals [!Ref IsCRStreamServerSideEncryptionEnabled, true]

  EnableAgentEventStreamServerSideEncryption:
    !Equals [!Ref IsAgentEventStreamServerSideEncryptionEnabled, true]

  #########################################################
  # Kinesis Video Stream and Connect Instance Availabilty #
  #########################################################
  IsBothKinesisVideoStreamAndConnectAvailableInRegion:
    !And [
      !Equals [
        !FindInMap [KinesisVideoStreamRegions, !Ref "AWS::Region", isAvailable],
        true,
      ],
      !Equals [
        !FindInMap [AmazonConnectRegions, !Ref "AWS::Region", isAvailable],
        true,
      ],
    ]

  #######################################
  # Connect Customer Profile Conditions #
  #######################################
  IsBothCustomerProfileAndConnectAvailableInRegion:
    !And [
      !Equals [
        !FindInMap [CustomerProfileRegions, !Ref "AWS::Region", isAvailable],
        true,
      ],
      !Equals [
        !FindInMap [AmazonConnectRegions, !Ref "AWS::Region", isAvailable],
        true,
      ],
    ]

  IsUsingDeadLetterQueueForCustomerProfile:
    !Equals [!Ref UseDeadLetterQueueForCustomerProfile, true]

  ###########################################
  # Connect Features Availabilty Conditions #
  ###########################################

Resources:
  ###############################################################
  ###############################################################
  ## AC INSTANCE (As of 05-25 this is not GA & can change)     ##
  ## Additional Information:                                   ##
  ##  - Amazon Connect enforces a limit of 100 combined        ##
  ##    instance creation and deletions every 30 days          ##
  ##  - Cannot update Identity Managent Type (Connect VS SAML) ##
  ##    after the instance is created                          ##
  ###############################################################
  ###############################################################
  ConnectInstance:
    Type: AWS::Connect::Instance
    Condition: IsConnectAvailableInRegion
    Properties:
      IdentityManagementType: !Ref IdentityManagementType
      InstanceAlias: !Ref InstanceAliasName
      Attributes:
        AutoResolveBestVoices: !Ref IsAutoResolveBestVoicesEnabled
        ContactflowLogs: !Ref IsContactflowLogsEnabled
        ContactLens: !Ref IsContactLensEnabled
        EarlyMedia: !Ref IsEarlyMediaEnabled
        InboundCalls: !Ref IsInboundCallsEnabled
        OutboundCalls: !Ref IsOutboundCallsEnabled
        # As of 05-25, you must be on the AWS's allowed list to use this.
        # UseCustomTTSVoices: !Ref IsUseCustomTTSVoicesEnabled #

  ##############################################################
  ##############################################################
  ##                                                          ##
  ##                AC DATA STORAGE/STREAMING                 ##
  ##                                                          ##
  ##############################################################
  ##############################################################

  #####################################
  # AC Instance KMS Key Configuration #
  #####################################
  ConnectKMSKey:
    Type: AWS::KMS::Key
    Condition: IsConnectAvailableInRegion
    DeletionPolicy: Retain # Retain the key when the stack is deleted
    UpdateReplacePolicy: Retain # Update fails even with this policy on KeyUsage, MultiRegion, KeySpec
    Properties:
      KeyUsage: ENCRYPT_DECRYPT
      Description: KMS key for Amazon Connect Data
      EnableKeyRotation: true
      Origin: AWS_KMS # Default
      KeySpec: SYMMETRIC_DEFAULT # Default
      Enabled: true # Default
      RotationPeriodInDays: 365 # Default
      PendingWindowInDays: 30 # Default (Waits 30 days before key deleted permanently)
      KeyPolicy:
        Version: "2012-10-17"
        Id: !Ref AWS::StackName
        Statement:
          ######################################################################################
          # !IMPORTANT: This allows any IAM Identity to manage the key [Ownership is on IAM]   #
          #   If you need to limit this, please add key policies and remove the root principal #
          ######################################################################################
          - Sid: Allow any identity in the account (With the correct permissions) to manage the key [Ownership is on IAM]
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action:
              - "kms:*"
            Resource: "*"

  ##################################
  # AC KMS Key Alias Configuration #
  ##################################
  ConnectKMSKeyAlias:
    Type: AWS::KMS::Alias
    Condition: IsConnectAvailableInRegion
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}/connect/${Environment}"
      TargetKeyId: !GetAtt ConnectKMSKey.Arn

  ###################################
  # AC Kinesis Stream Configuration #
  # For CR and Agent Event Streams  #
  ###################################
  CRKinesisStream:
    Type: AWS::Kinesis::Stream
    Condition: IsConnectAvailableInRegion
    DeletionPolicy: Delete # Delete the stream when the instance is deleted
    # Deleting the stream if update requires a replacement
    #  Since data will most likely be stored in S3, this shouldn't be an issue
    UpdateReplacePolicy: Delete
    Properties:
      RetentionPeriodHours: !Ref CRStreamRetentionPeriod
      StreamModeDetails:
        StreamMode: "ON_DEMAND" # Default
      StreamEncryption: !If
        - "EnableCRStreamServerSideEncryption"
        - EncryptionType: KMS
          KeyId: !Ref ConnectKMSKeyAlias # Alias name, Alias ARN, KMS Key ARN, AWS Kinesis Key (alias/aws/kinesis) allowed
        - !Ref AWS::NoValue

  AgentEventKinesisStream:
    Type: AWS::Kinesis::Stream
    Condition: IsConnectAvailableInRegion
    DeletionPolicy: Delete # Delete the stream when the instance is deleted
    # Deleting the stream if update requires a replacement
    #  Since data will most likely be stored in S3, this shouldn't be an issue
    UpdateReplacePolicy: Delete
    Properties:
      RetentionPeriodHours: !Ref AgentEventStreamRetentionPeriod
      StreamModeDetails:
        StreamMode: "ON_DEMAND" # Default
      StreamEncryption: !If
        - "EnableAgentEventStreamServerSideEncryption"
        - EncryptionType: KMS
          KeyId: !Ref ConnectKMSKeyAlias # Alias name, Alias ARN, KMS Key ARN, AWS Kinesis Key (alias/aws/kinesis) allowed
        - !Ref AWS::NoValue

  #######################################
  # AC Kinesis Firehose + Firehose Role #
  # For CR Stream only                  #
  #######################################
  ACKinesisFirehoseServiceRole:
    Type: AWS::IAM::Role
    Condition: IsConnectAvailableInRegion
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "firehose.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: CRKinesisFirehosePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              # Does not include policies for tranforming data using Lambda or Glue
              - Effect: Allow
                Action:
                  - logs:PutLogEvents
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/kinesisfirehose/*"
              - Effect: Allow
                Action:
                  - "s3:AbortMultipartUpload"
                  - "s3:GetBucketLocation"
                  - "s3:GetObject"
                  - "s3:ListBucket"
                  - "s3:ListBucketMultipartUploads"
                  - "s3:PutObject"
                Resource:
                  - !GetAtt ConnectStorageBucket.Arn
                  - !Sub "${ConnectStorageBucket.Arn}/*"
              - Effect: Allow
                Action:
                  - kinesis:DescribeStream
                  - kinesis:GetShardIterator
                  - kinesis:GetRecords
                  - kinesis:ListShards
                Resource:
                  - !GetAtt CRKinesisStream.Arn

  CRKinesisFirehose:
    Type: AWS::KinesisFirehose::DeliveryStream
    Condition: IsConnectAvailableInRegion
    Properties:
      DeliveryStreamType: KinesisStreamAsSource
      KinesisStreamSourceConfiguration:
        KinesisStreamARN: !GetAtt CRKinesisStream.Arn
        RoleARN: !GetAtt ACKinesisFirehoseServiceRole.Arn
      ExtendedS3DestinationConfiguration:
        BucketARN: !GetAtt ConnectStorageBucket.Arn
        RoleARN: !GetAtt ACKinesisFirehoseServiceRole.Arn
        Prefix: "cr/!{timestamp:YYYY}/!{timestamp:MM}/!{timestamp:dd}/"
        ErrorOutputPrefix: "cr-error/!{timestamp:yyy/MM/dd}/!{firehose:random-string}/!{firehose:error-output-type}/"

  ########################################
  # AC Instance S3 Storage Configuration #
  ########################################
  ConnectStorageBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain # Retain the bucket when the instance is deleted
    UpdateReplacePolicy: Retain # Retain the bucket when the bucket needs to be replaced

  ####################################################
  ####################################################
  ##                                                ##
  ##      AC DATA STORAGE/STREAMING INTEGRATION     ##
  ##                                                ##
  ####################################################
  ####################################################

  ########################################
  # AC Instance Storage Configurations   #
  ########################################
  ConnectCallRecordingsStorageConfig:
    Type: AWS::Connect::InstanceStorageConfig
    Condition: IsConnectAvailableInRegion
    Properties:
      InstanceArn: !GetAtt ConnectInstance.Arn
      ResourceType: CALL_RECORDINGS
      StorageType: S3
      S3Config:
        BucketName: !Ref ConnectStorageBucket
        BucketPrefix: !Ref ConnectCallRecordingsS3Prefix
        EncryptionConfig:
          EncryptionType: KMS
          KeyId: !GetAtt ConnectKMSKey.Arn

  ConnectChatTranscriptsStorageConfig:
    Type: AWS::Connect::InstanceStorageConfig
    Condition: IsConnectAvailableInRegion
    Properties:
      InstanceArn: !GetAtt ConnectInstance.Arn
      ResourceType: CHAT_TRANSCRIPTS
      StorageType: S3
      S3Config:
        BucketName: !Ref ConnectStorageBucket
        BucketPrefix: !Ref ConnectChatTranscriptsS3Prefix
        EncryptionConfig:
          EncryptionType: KMS
          KeyId: !GetAtt ConnectKMSKey.Arn

  ConnectScheduledReportsStorageConfig:
    Type: AWS::Connect::InstanceStorageConfig
    Condition: IsConnectAvailableInRegion
    Properties:
      InstanceArn: !GetAtt ConnectInstance.Arn
      ResourceType: SCHEDULED_REPORTS
      StorageType: S3
      S3Config:
        BucketName: !Ref ConnectStorageBucket
        BucketPrefix: !Ref ConnectScheduledReportsS3Prefix
        EncryptionConfig:
          EncryptionType: KMS
          KeyId: !GetAtt ConnectKMSKey.Arn

  #####################################
  # AC Instance Stream Configurations #
  #####################################
  ConnectCRStreamConfig:
    Type: AWS::Connect::InstanceStorageConfig
    Condition: IsConnectAvailableInRegion
    Properties:
      InstanceArn: !GetAtt ConnectInstance.Arn
      ResourceType: "CONTACT_TRACE_RECORDS"
      #####################################
      # As of 05-25, the Kinesis Firehose #
      # Does not seem to be supported yet #
      # Use Kinesis Stream instead        #
      #####################################
      # StorageType: KINESIS_FIREHOSE
      # KinesisFirehoseConfig:
      #   FirehoseArn: !GetAtt CRKinesisFirehose.Arn
      StorageType: "KINESIS_STREAM"
      KinesisStreamConfig:
        StreamArn: !GetAtt CRKinesisStream.Arn

  ConnectAgentEventStreamConfig:
    Type: AWS::Connect::InstanceStorageConfig
    Condition: IsConnectAvailableInRegion
    Properties:
      InstanceArn: !GetAtt ConnectInstance.Arn
      ResourceType: "AGENT_EVENTS"
      StorageType: "KINESIS_STREAM"
      KinesisStreamConfig:
        StreamArn: !GetAtt AgentEventKinesisStream.Arn

  ########################################################
  # AC Instance Kinesis Video Stream Configuration (KVS) #
  ########################################################
  ConnectKinesisVideoStream:
    Type: AWS::Connect::InstanceStorageConfig
    Condition: IsBothKinesisVideoStreamAndConnectAvailableInRegion
    Properties:
      InstanceArn: !GetAtt ConnectInstance.Arn
      ResourceType: MEDIA_STREAMS
      StorageType: KINESIS_VIDEO_STREAM
      KinesisVideoStreamConfig:
        EncryptionConfig:
          EncryptionType: KMS
          KeyId: !GetAtt ConnectKMSKey.Arn
        RetentionPeriodHours: !Ref KinesisVideoStreamRetentionPeriod
        Prefix: !Ref KinesisVideoStreamPrefix

  ####################################
  ####################################
  ##                                ##
  ##      AC Email Configuration    ##
  ##                                ##
  ####################################
  ####################################
  AmazonConnectEmailSESAccessRole:
    Type: AWS::IAM::Role
    Condition: IsConnectAvailableInRegion
    Properties:
      RoleName: AmazonConnectEmailSESAccessRole
      Description: Role for SES to access Amazon Connect
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "ses.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: AmazonConnectEmailSESAccessPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "connect:StartEmailContact"
                Resource: "arn:aws:connect:*:*:instance/*"

  ####################################
  ####################################
  ##                                ##
  ##   AC Voice ID Configuration    ##
  ##                                ##
  ####################################
  ####################################
  ConnectVoiceIDDomain:
    Type: AWS::VoiceID::Domain
    Condition: IsConnectAvailableInRegion
    Properties:
      Name: !Ref ConnectVoiceIDDomainName
      ServerSideEncryptionConfiguration:
        KmsKeyId: !Ref ConnectKMSKey

  ####################################
  ####################################
  ##                                ##
  ##   AC Customer Profile Config   ##
  ##                                ##
  ####################################
  ####################################
  ConnectCustomerProfileDeadLetterQueue:
    Type: AWS::SQS::Queue
    Condition: IsBothCustomerProfileAndConnectAvailableInRegion
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      MessageRetentionPeriod: !Ref ConnectCustomerProfileDeadLetterQueueMessageRetentionPeriodInSeconds

  ConnectCustomerProfileQueuePolicy:
    Type: AWS::SQS::QueueInlinePolicy
    Condition: IsBothCustomerProfileAndConnectAvailableInRegion
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: Allows any identity in the account to manage the queue
            Effect: Allow
            Principal:
              AWS: !Sub ${AWS::AccountId}
            Action:
              - "sqs:*"
            Resource:
              - !GetAtt ConnectCustomerProfileDeadLetterQueue.Arn
          - Sid: Allow Customer Profile to send messages to the queue
            Effect: Allow
            Principal:
              Service:
                - "profile.amazonaws.com"
            Action:
              - "sqs:SendMessage"
            Resource:
              - !GetAtt ConnectCustomerProfileDeadLetterQueue.Arn
      Queue: !Ref ConnectCustomerProfileDeadLetterQueue

  ConnectCustomerProfileDomain:
    Type: AWS::CustomerProfiles::Domain
    Condition: IsBothCustomerProfileAndConnectAvailableInRegion
    Properties:
      DomainName: !Ref ConnectCustomerProfileDomainName
      DefaultExpirationDays: !Ref ConnectCustomerProfileDataExpirationPeriodInDays
      DeadLetterQueueUrl: !If
        - "IsUsingDeadLetterQueueForCustomerProfile"
        - !Ref ConnectCustomerProfileDeadLetterQueue
        - !Ref AWS::NoValue
      DefaultEncryptionKey: !GetAtt ConnectKMSKey.Arn

  ####################################
  ####################################
  ##                                ##
  ##     Amazon Connect Q Config    ##
  ##                                ##
  ####################################
  ####################################
  ConnectQAssistant:
    Type: AWS::Wisdom::Assistant
    Condition: IsConnectAvailableInRegion
    Properties:
      Name: !Ref ConnectQAssistantName
      Type: AGENT
      ServerSideEncryptionConfiguration:
        KmsKeyId: !Ref ConnectKMSKey
